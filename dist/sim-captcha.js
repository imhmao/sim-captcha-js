(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("sim-captcha", [], factory);
	else if(typeof exports === 'object')
		exports["sim-captcha"] = factory();
	else
		root["sim-captcha"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__css_sim_captcha_css__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__css_sim_captcha_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__css_sim_captcha_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__js_sim_captcha_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__js_sim_captcha_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__js_sim_captcha_js__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_1__js_sim_captcha_js___default.a);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcz8zNDc5Il0sIm5hbWVzIjpbIlNpbUNhcHRjaGEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTs7QUFFZUEseUhBQWYiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vY3NzL3NpbS1jYXB0Y2hhLmNzc1wiO1xyXG5cclxuaW1wb3J0IFNpbUNhcHRjaGEgZnJvbSBcIi4vanMvc2ltLWNhcHRjaGEuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNpbUNhcHRjaGE7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(2);\n            var content = __webpack_require__(3);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3NpbS1jYXB0Y2hhLmNzcz84NTAyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxDQUEyRTtBQUM3RiwwQkFBMEIsbUJBQU8sQ0FBQyxDQUE0RDs7QUFFOUY7O0FBRUE7QUFDQSwwQkFBMEIsUUFBUztBQUNuQzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOzs7O0FBSUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zaW0tY2FwdGNoYS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Nzcy9zaW0tY2FwdGNoYS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(4)(false);\n// imports\nexports.push([module.i, \"@import url(/fonts/iconfont.css);\", \"\"]);\n\n// module\nexports.push([module.i, \"/* 媒体查询参考: https://www.cnblogs.com/bulaliu/p/8481584.html */\\r\\n\\r\\n.simCaptcha-hidden {\\r\\n    display: none;\\r\\n}\\r\\n.simCaptcha-show {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n@keyframes simCaptcha_shake {\\r\\n\\t25% {\\r\\n\\t\\tmargin-left: -6px\\r\\n\\t}\\r\\n\\r\\n\\t75% {\\r\\n\\t\\tmargin-left: 6px\\r\\n\\t}\\r\\n\\r\\n\\t100% {\\r\\n\\t\\tmargin-left: 0\\r\\n\\t}\\r\\n}\\r\\n\\r\\n@-webkit-keyframes simCaptcha_shake {\\r\\n\\t25% {\\r\\n\\t\\tmargin-left: -6px\\r\\n\\t}\\r\\n\\r\\n\\t75% {\\r\\n\\t\\tmargin-left: 6px\\r\\n\\t}\\r\\n\\r\\n\\t100% {\\r\\n\\t\\tmargin-left: 0\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.simCaptcha-shake {\\r\\n    -moz-animation: simCaptcha_shake 0.2s linear infinite both;\\r\\n\\t-webkit-animation: simCaptcha_shake 0.2s linear infinite both;\\r\\n\\tanimation: simCaptcha_shake 0.2s linear infinite both;\\r\\n}\\r\\n\\r\\n#simCaptcha-mask{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    background: #000;\\r\\n    opacity: .5;\\r\\n    z-index: 2000000000;\\r\\n}\\r\\n\\r\\n#simCaptcha-layer {\\r\\n    position: fixed;\\r\\n    top:50%;\\r\\n    left:50%;\\r\\n    padding: 0px 4px;\\r\\n    transform: translate(-50%,-50%);\\r\\n    border: 1px solid rgb(229, 229, 229);\\r\\n    border-radius: 3px;\\r\\n    background-size: 20%;\\r\\n    background-position: 50% 32%;\\r\\n    background-color: #fff;\\r\\n    visibility: visible;\\r\\n    z-index: 2000000002;\\r\\n    overflow: hidden;\\r\\n}\\r\\n/* PC端 */\\r\\n@media screen and (min-width:900px){\\r\\n    #simCaptcha-layer{\\r\\n        width: 270px;\\r\\n    }\\r\\n}\\r\\n/* 移动端 */\\r\\n@media screen and (max-width:900px){\\r\\n    #simCaptcha-layer{\\r\\n        width: 270px;\\r\\n    }\\r\\n}\\r\\n\\r\\n#simCaptcha-vCodeTip {\\r\\n    text-align: center;\\r\\n    height: 40px;\\r\\n    line-height: 40px;\\r\\n    font-size: 14px;\\r\\n\\r\\n    -moz-user-select: -moz-none;\\r\\n    -ms-user-select: none;\\r\\n    -webkit-user-select: none;\\r\\n    user-select: none;\\r\\n}\\r\\n#simCaptcha-img-box {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#simCaptcha-img {\\r\\n    margin: 0 auto;\\r\\n}\\r\\n/* PC端 */\\r\\n@media screen and (min-width:900px){\\r\\n    #simCaptcha-img{\\r\\n        width: 260px;\\r\\n        height: 260px;\\r\\n    }\\r\\n}\\r\\n/* 移动端 */\\r\\n@media screen and (max-width:900px){\\r\\n    #simCaptcha-img{\\r\\n        width: 260px;\\r\\n        height: 260px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.simCaptcha-mark {\\r\\n    position:absolute;\\r\\n    z-index:9999;\\r\\n    width:25px;\\r\\n    height:25px;\\r\\n    background-color:#539ffe;\\r\\n    color:#fff;\\r\\n    text-align:center;\\r\\n    line-height:25px;\\r\\n    border-radius: 50%;\\r\\n    border:2px solid #fff;\\r\\n    box-sizing: border-box;\\r\\n    box-shadow: 0 0 10px black;\\r\\n}\\r\\n#simCaptcha-errorTip {\\r\\n    position: absolute;\\r\\n    bottom: -30px; /* 默认隐藏 */\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    text-align: left;\\r\\n    text-indent: 9px;\\r\\n    font-size: 16px;\\r\\n    background-color: transparent;\\r\\n    -moz-transition: bottom .4s ease-out;\\r\\n    -o-transition: bottom .4s ease-out;\\r\\n    -webkit-transition: bottom .4s ease-out;\\r\\n    transition: bottom .4s ease-out;\\r\\n    z-index: 999;\\r\\n    line-height: 30px;\\r\\n    color: white;\\r\\n    -moz-user-select: -moz-none;\\r\\n    -ms-user-select: none;\\r\\n    -webkit-user-select: none;\\r\\n    user-select: none;\\r\\n}\\r\\n#simCaptcha-errorTip.simCaptcha-errorTip-fail {\\r\\n    background-color: #de715b;\\r\\n}\\r\\n#simCaptcha-errorTip.simCaptcha-errorTip-success {\\r\\n    background-color: #5ebf70;\\r\\n}\\r\\n#simCaptcha-errorTip.simCaptcha-errorTip-up {\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.simCaptcha-bottom {\\r\\n    padding: 4px 0;\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n#simCaptcha-btn-close {\\r\\n    height:32px;\\r\\n    line-height: 32px;\\r\\n    font-size: 26px;\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n    outline: none;\\r\\n    color: gray;\\r\\n    font-family: \\\"iconfont\\\";\\r\\n}\\r\\n#simCaptcha-btn-refresh {\\r\\n    height:32px;\\r\\n    line-height: 32px;\\r\\n    font-size: 22px;\\r\\n    transform: translateY(-2px);\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n    outline: none;\\r\\n    color: gray;\\r\\n    font-family: \\\"iconfont\\\";\\r\\n}\\r\\n#simCaptcha-btn-confirm {\\r\\n    float: right;\\r\\n    width:94px;\\r\\n    height:32px;\\r\\n    border: none;\\r\\n    background-color: #539ffe;\\r\\n    outline: none;\\r\\n    color: #fff;\\r\\n}\", \"\"]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MTU5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxjQUFjOztBQUVsRTtBQUNBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("(function () {\n\t// 私有字段\n\t// 点击此 _element 元素则弹出验证码层，为此元素绑定点击事件\n\tvar _element = null;\n\tvar _appId = \"\";\n\t// 前端验证成功后，会调用业务传入的回调函数，并在第一个参数中传入回调结果\n\tvar _callback = null;\n\tvar _options = null; // 保留，暂时无用\n\n\t// 用户点击验证码图片的位置数据 {Array} eg:  [{ x: 12, y: 35 }, { x: 52, y: 35 }, { x: 32, y: 75 }]\n\tvar _vCodePos = [];\n\n\t// 验证码服务端 效验url\n\tvar _reqVCodeCheckUrl = \"\";\n\t// 验证码服务端 获取验证码图片url\n\tvar _reqVCodeImgUrl = \"\";\n\n\t// 从后端响应得到的appId\n\tvar _resAppId = \"\";\n\t// 验证是否通过效验票据\n\tvar _resTicket = \"\";\n\t// 用户会话唯一标识\n\tvar _resUserId = \"\";\n\t// 验证码图片 base64\n\tvar _resVCodeImg = \"\";\n\t// 验证码提示 eg: 请依序点击 走 炮 跳\n\tvar _resVCodeTip = \"\";\n\n\t// 错误提示 eg: 1.点错啦，请重试 2.这题有点难，为你换一个试试吧\n\tvar _errorTip = \"\";\n\n\t/***\r\n  * 隐藏当前验证码弹出层，下次show 将使用当前验证码图片base64\r\n  * 用于用户手动点击关闭按钮\r\n  */\n\tfunction hidden() {\n\t\t// TODO: DOM操作 隐藏\n\t\tdocument.getElementById(\"simCaptcha-mask\").className = \"simCaptcha-hidden\";\n\t\tdocument.getElementById(\"simCaptcha-layer\").className = \"simCaptcha-hidden\";\n\t}\n\n\t/***\r\n  * 摧毁当前验证码（隐藏验证码弹出层，清除验证码图片base64），下次show 将请求新验证码图片base64\r\n  */\n\tfunction destroy() {\n\t\t// 隐藏当前验证码弹出层\n\t\thidden();\n\t\t// 清除全部点触标记\n\t\tclearPointMark();\n\t\t// 清空点触位置数据\n\t\t_vCodePos = [];\n\t\t// 清除验证码相关数据\n\t\t_resVCodeImg = \"\";\n\t\t_resVCodeTip = \"\";\n\t\t_resAppId = \"\";\n\t\t_resTicket = \"\";\n\n\t\t_errorTip = \"\";\n\t}\n\n\t/**\r\n  * 在验证码弹出层展示 成功通过验证\r\n  * @param {Number} ts 本次点击验证码花费时间（js 13位时间戳）// 保留，暂时不用，随便传一个，或不传\r\n  */\n\tfunction showSuccessTip(ts) {\n\t\t// 在验证码弹出层展示 验证通过\n\t\t// 更新错误提示为 \"验证通过\"\n\t\tupdateErrorTip(\"验证通过\");\n\t\t// 0.5s后 destroy 验证码层\n\t\tsetTimeout(destroy, 500);\n\t}\n\n\t/**\r\n  * DOM: 更新错误提示\r\n  * @param {String} errorTip 错误提示\r\n  */\n\tfunction updateErrorTip(errorTip) {\n\t\t// TODO: DOM: 更新错误提示\n\t\tif (!errorTip) {\n\t\t\terrorTip = _errorTip;\n\t\t}\n\t\tdocument.getElementById(\"simCaptcha-errorTip\").innerText = errorTip;\n\t\tif (errorTip == \"验证通过\") {\n\t\t\tdocument.getElementById(\"simCaptcha-errorTip\").className = \"simCaptcha-errorTip-success simCaptcha-errorTip-up\";\n\t\t} else {\n\t\t\tdocument.getElementById(\"simCaptcha-errorTip\").className = \"simCaptcha-errorTip-fail simCaptcha-errorTip-up\";\n\t\t\t// 验证码层震动\n\t\t\tdocument.getElementById(\"simCaptcha-layer\").className = \"simCaptcha-shake\";\n\t\t}\n\t\t// 1.8秒后向下动画隐藏\n\t\tsetTimeout(function () {\n\t\t\t// 注意: 为了使 错误提示上下css动画, 背景颜色 down时不掉色，所以需要这样做\n\t\t\tif (errorTip == \"验证通过\") {\n\t\t\t\tdocument.getElementById(\"simCaptcha-errorTip\").className = \"simCaptcha-errorTip-success\";\n\t\t\t} else {\n\t\t\t\tdocument.getElementById(\"simCaptcha-errorTip\").className = \"simCaptcha-errorTip-fail\";\n\t\t\t\t// 验证码层停止震动\n\t\t\t\tdocument.getElementById(\"simCaptcha-layer\").className = \"simCaptcha-show\";\n\t\t\t}\n\t\t}, 1800);\n\t}\n\n\t/**\r\n  * DOM: 更新验证码提示\r\n  * @param {String} vCodeTip 验证码提示\r\n  */\n\tfunction updateVCodeTip(vCodeTip) {\n\t\t// TODO: DOM: 更新验证码提示\n\t\tif (!vCodeTip) {\n\t\t\tvCodeTip = _resVCodeTip;\n\t\t}\n\t\tdocument.getElementById(\"simCaptcha-vCodeTip\").innerText = vCodeTip;\n\t}\n\n\t/**\r\n  * 更新验证码图片src\r\n  * @param {String} imgSrc 验证码图片的src值\r\n  */\n\tfunction updateImgSrc(imgSrc) {\n\t\t// TODO: DOM: 更新图片src\n\t\tif (!imgSrc) {\n\t\t\timgSrc = _resVCodeImg;\n\t\t}\n\t\tdocument.getElementById(\"simCaptcha-img\").src = imgSrc;\n\t}\n\n\t/**\r\n  * 清空图片上的全部点触标记\r\n  */\n\tfunction clearPointMark() {\n\t\t// #simCaptcha-marks 内元素全部移除\n\t\t// TODO: 需DOM操作\n\t\tdocument.getElementById(\"simCaptcha-marks\").innerHTML = \"\";\n\t}\n\n\t/***\r\n  * 将用户点击验证码的位置数据发送到验证码服务端   (每个位置(x轴, y轴))\r\n  */\n\tfunction sendVCodePos() {\n\t\tvar ts = Date.now(); // js 13位 毫秒时间戳\n\t\tvar verifyInfo = { appId: _appId, vCodePos: _vCodePos, userId: _resUserId, ua: navigator.userAgent, ts: ts }; // ua, ts 服务端暂时未用，保留。用户花费在此验证码的时间 = 验证码服务端 接收到点击位置数据时间 - 验证码服务端 产生验证码图片时间\n\t\t// 发送ajax到验证码服务端 -> 得到response结果，封装为 res\n\t\thttpPost(_reqVCodeCheckUrl, verifyInfo, function (response) {\n\t\t\t// code: 0: 通过验证\n\t\t\tif (response.code == 0) {\n\t\t\t\t// 通过验证 -> 1.回调callback（成功回调） 2.销毁验证码弹出层destroy\n\t\t\t\tvar res = { code: 0, userId: _resUserId, ticket: response.data.ticket, appId: response.data.appId, bizState: null }; // bizState自定义透传参数，暂未实现，保留\n\t\t\t\t// 将 从验证码服务端得到的 appId, ticket存起来\n\t\t\t\t_resAppId = res.appId; // TODO: 暂时无用，可以将这个验证码服务端返回的_resAppId与 当前客户端浏览器存的_appId做比较\n\t\t\t\t_resTicket = res.ticket;\n\t\t\t\t_callback(res);\n\t\t\t\t// 在摧毁验证码层之前，先在验证码层展示成功通过验证提示\n\t\t\t\tshowSuccessTip();\n\t\t\t} else {\n\t\t\t\t// 未通过验证 -> 1.提示用户 2.if(错误次数未达上限)：清空用户点击验证码的位置数据，重置，让用户重新点击 3.else(错误次数达到上限)：刷新验证码弹出层（请求新验证码图片，更新验证码提示）\n\t\t\t\t// code: -1: 验证码错误 且 错误次数未达上限\n\t\t\t\tif (response.code == -1) {\n\t\t\t\t\t_errorTip = \"点错啦, 请重试\";\n\t\t\t\t\t// 清空点触位置数据\n\t\t\t\t\t_vCodePos = [];\n\t\t\t\t\t// 清除图片上的全部点触标记\n\t\t\t\t\tclearPointMark();\n\t\t\t\t} else if (response.code == -2) {\n\t\t\t\t\t// code: -2: 验证码错误 且 错误次数已达上限\n\t\t\t\t\t_errorTip = \"这题有点难, 为你换一个试试吧\";\n\t\t\t\t\trefreshVCode();\n\t\t\t\t} else if (response.code == -3) {\n\t\t\t\t\t// 验证码无效（被篡改）\n\t\t\t\t\t_errorTip = \"验证码无效, 为你换一个试试吧\";\n\t\t\t\t\trefreshVCode();\n\t\t\t\t} else if (response.code == -4) {\n\t\t\t\t\t// 验证码过期\n\t\t\t\t\t_errorTip = \"验证码过期, 为你换一个试试吧\";\n\t\t\t\t\trefreshVCode();\n\t\t\t\t} else if (response.code == -5) {\n\t\t\t\t\t// 验证码无效\n\t\t\t\t\t_errorTip = \"验证码过期, 为你换一个试试吧\";\n\t\t\t\t\trefreshVCode();\n\t\t\t\t}\n\t\t\t\t// 更新错误提示\n\t\t\t\tupdateErrorTip(_errorTip);\n\t\t\t}\n\t\t});\n\t}\n\n\t/***\r\n  * 刷新验证码弹出层：1.刷新验证码图片，2.更新验证码提示 3. 清空点触位置数据 4.清空图片上的全部点触标记\r\n  */\n\tfunction refreshVCode() {\n\t\t// 清空点触位置数据\n\t\t_vCodePos = [];\n\t\t// 清除图片上的全部点触标记\n\t\tclearPointMark();\n\t\t// ajax请求新的验证码图片base64\n\t\thttpGet(_reqVCodeImgUrl, function (response) {\n\t\t\tif (response.code == 0) {\n\t\t\t\t// 成功获取新验证码\n\t\t\t\t// 保存并更新 验证码图片\n\t\t\t\t_resVCodeImg = response.data.vCodeImg;\n\t\t\t\t// 更新验证码提示\n\t\t\t\t_resVCodeTip = response.data.vCodeTip;\n\t\t\t\t// 保存/更新 用户此次会话唯一标识\n\t\t\t\t_resUserId = response.data.userId;\n\t\t\t} else {\n\t\t\t\t// 获取验证码失败\n\t\t\t\t_errorTip = response.message;\n\t\t\t}\n\n\t\t\tupdateImgSrc();\n\t\t\tupdateVCodeTip();\n\t\t\t// fixed: 首次弹出验证码层时,震动\n\t\t\t// fixed: 刷新时显示错误提示\n\t\t\t// if(_errorTip) {\n\t\t\t// \tupdateErrorTip();\n\t\t\t// }\n\t\t});\n\t}\n\n\t/***\r\n  * 显示验证码弹出层\r\n  */\n\tfunction show() {\n\t\t// if(没有验证码数据) 先请求新验证码数据 \n\t\tif (_resVCodeImg == \"\") {\n\t\t\t// 请求新验证码数据\n\t\t\trefreshVCode();\n\t\t}\n\n\t\t// TODO: 需DOM操作\n\t\t// 显示遮罩阴影\n\t\tdocument.getElementById(\"simCaptcha-mask\").className = \"simCaptcha-show\";\n\t\t// 显示验证码弹出层\n\t\tdocument.getElementById(\"simCaptcha-layer\").className = \"simCaptcha-show\";\n\t}\n\n\t/**\r\n  * 验证码图片被点击时\r\n  */\n\tfunction imgClick(event) {\n\t\t// console.log(this); // 拿到的是这个 <img />元素\n\t\tvar e = event || window.event;\n\t\t// console.log(e); // 图片被点击的事件\n\n\t\tvar pxPos = getImgClickPos(this, e);\n\t\t// 在点击处创建点标记\n\t\tcreatePointMark(pxPos);\n\n\t\t// 记录点击位置数据(转换为 相对于图片的百分比 位置), 放入 _vCodePos\n\t\tvar percentPos = pxToPercentPos(pxPos);\n\t\t_vCodePos.push(percentPos);\n\t}\n\n\t/**\r\n  * 像素相对位置 -> 百分比相对位置\r\n  * @param {Object} pxPos 相对于验证码图片的相对位置(px)\r\n  * @return {Object} { x: 20, y:40 } (表示x轴20%, y轴40%)\r\n  */\n\tfunction pxToPercentPos(pxPos) {\n\t\t// 即时获取当前验证码图片宽高(像素)\n\t\tvar imgSize = getImgSize();\n\t\tvar imgWidthPx = imgSize.width;\n\t\tvar imgHeightPx = imgSize.height;\n\n\t\tvar xPercent = parseInt(pxPos.x / imgWidthPx * 100);\n\t\tvar yPercent = parseInt(pxPos.y / imgHeightPx * 100);\n\n\t\treturn { x: xPercent, y: yPercent };\n\t}\n\n\t/**\r\n  * 即时获取当前验证码图片宽高(像素)\r\n  * @return {Object} eg:{width: 200, height:200} (px)\r\n  */\n\tfunction getImgSize() {\n\t\tvar width = document.getElementById(\"simCaptcha-img\").offsetWidth;\n\t\tvar height = document.getElementById(\"simCaptcha-img\").offsetHeight;\n\n\t\treturn { width: width, height: height };\n\t}\n\n\t/**\r\n  * 获取点击位置(相对于图片的相对位置)(px)\r\n  * @param obj 事实上始终为验证码图片元素\r\n  * @param event 验证码图被点击的事件\r\n  * @return {Object} { x: 123, y:123 } (px)\r\n  */\n\tfunction getImgClickPos(obj, event) {\n\t\t// https://www.cnblogs.com/jiangxiaobo/p/6593584.html\n\t\t// (1)原生js\n\t\t// var clickX = event.clientX + document.body.scrollLeft;// 点击x 相对于整个html文档\n\t\t// var clickY = event.clientY + document.body.scrollTop;// 点击y 相对于整个html文档\n\n\t\t// var objX = getOffsetLeft(obj);// 对象x 相对于整个html文档\n\t\t// var objY = getOffsetTop(obj);// 对象y 相对于整个html文档\n\n\t\t// var xOffset = clickX - objX;\n\t\t// var yOffset = clickY - objY;\n\t\t// // 临时修复位置不正确\n\t\t// xOffset = xOffset + 200 - 10 - 10;\n\t\t// yOffset = yOffset + 200 - 10 - 10;\n\n\t\t// (2)不考虑Firefox\n\t\tvar xOffset = event.offsetX;\n\t\tvar yOffset = event.offsetY;\n\n\t\t// (3)依赖 jQuery\n\t\t// var xOffset = event.clientX - ($(obj).offset().left - $(window).scrollLeft());;\n\t\t// var yOffset = event.clientY - ($(obj).offset().top - $(window).scrollTop());;\n\n\t\treturn { x: xOffset, y: yOffset };\n\t}\n\n\t/**\r\n  * 创建点标记\r\n  * @param pos {Object} 相对于图片的位置( { x: 12, y: 56 } ) (单位px)\r\n  */\n\tfunction createPointMark(pos) {\n\t\tvar num = _vCodePos.length + 1;\n\t\tpos.x = parseInt(pos.x);\n\t\tpos.y = parseInt(pos.y);\n\t\t// TODO: DOM操作 创建点标记\n\t\tvar markHtml = '<div id=\"simCaptcha-mark-{2}\" class=\"simCaptcha-mark\" style=\"left:{0}px;top:{1}px;\">{2}</div>'.format(pos.x - 10, pos.y - 10, num);\n\n\t\tvar marksElement = document.getElementById(\"simCaptcha-marks\");\n\n\t\t// 方案1\n\t\t// 这样做, 会更新 marks 内的所有 node, 所以导致除最新node，其他mark注册的事件均失效(不是原node了)\n\t\t// marksElement.innerHTML = marksElement.innerHTML + markHtml;\n\t\t// // 遍历下面的所有子节点, 重写注册\n\t\t// marksElement.childNodes.forEach(element => {\n\t\t// \telement.onclick = markClick;\n\t\t// });\n\n\t\t// 方案2\n\t\t// 只是在之后插入新node, 不更新之前已有node\n\t\tmarksElement.insertAdjacentHTML(\"beforeend\", markHtml);\n\t\tdocument.getElementById(\"simCaptcha-mark-\" + num).onclick = markClick;\n\t}\n\n\t/**\r\n  * 标记被点击: eg:当前标记序号(1)(2)(3)(4)(5), 点击(3), 移除(3)(4)(5)\r\n  */\n\tfunction markClick() {\n\t\t// console.log(this); // 当前被点击标记元素\n\t\tvar clickedNum = parseInt(this.innerText);\n\t\tvar length = _vCodePos.length;\n\t\tfor (var i = clickedNum - 1; i < length; i++) {\n\n\t\t\t// 将(clickedNum)及之后的标记html移除\n\t\t\tvar temp = document.getElementById(\"simCaptcha-mark-\" + (i + 1));\n\t\t\tremoveElement(temp);\n\n\t\t\t// 将vCodePos中 clickedNum及之后的位置数据移除\n\t\t\tvar removePos = _vCodePos.pop();\n\n\t\t\t// console.log(removePos);\n\t\t}\n\t}\n\n\t/**\r\n  * 初始化, new SimCaptcha() 中 执行\r\n  */\n\tfunction init() {\n\t\tvar htmlLayer = '<div id=\"simCaptcha-mask\" class=\"simCaptcha-hidden\"></div>\\\r\n\t\t\t\t\t\t<div id=\"simCaptcha-layer\" class=\"simCaptcha-hidden\" >\\\r\n\t\t\t\t\t\t\t<div id=\"simCaptcha-vCodeTip\"></div>\\\r\n\t\t\t\t\t\t\t<div id=\"simCaptcha-img-box\">\\\r\n\t\t\t\t\t\t\t\t<img id=\"simCaptcha-img\" />\\\r\n\t\t\t\t\t\t\t\t<div id=\"simCaptcha-marks\"></div>\\\r\n\t\t\t\t\t\t\t\t<span id=\"simCaptcha-errorTip\"></span>\\\r\n\t\t\t\t\t\t\t</div>\\\r\n\t\t\t\t\t\t\t<div class=\"simCaptcha-bottom\">\\\r\n\t\t\t\t\t\t\t\t<button id=\"simCaptcha-btn-close\">&#xe60a;</button>\\\r\n\t\t\t\t\t\t\t\t<button id=\"simCaptcha-btn-refresh\">&#xe675;</button>\\\r\n\t\t\t\t\t\t\t\t<button id=\"simCaptcha-btn-confirm\">确认</button>\\\r\n\t\t\t\t\t\t\t</div>\\\r\n\t\t\t\t\t\t</div>';\n\t\t// body内(最底部) 插入验证码弹出层, 初始隐藏\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n\t\t// https://segmentfault.com/q/1010000003697751\n\t\tdocument.body.insertAdjacentHTML(\"beforeend\", htmlLayer);\n\n\t\t// 绑定点击事件\n\t\t_element.onclick = show;\n\n\t\tdocument.getElementById(\"simCaptcha-btn-close\").onclick = hidden;\n\n\t\tdocument.getElementById(\"simCaptcha-btn-refresh\").onclick = refreshVCode;\n\n\t\tdocument.getElementById(\"simCaptcha-btn-confirm\").onclick = sendVCodePos;\n\n\t\tdocument.getElementById(\"simCaptcha-img\").onclick = imgClick;\n\t}\n\n\t/***\r\n  * 手动初始化并绑定到一个元素\r\n  * @param element {HTMLElement} 需要绑定click事件的元素（注意：手动绑定不要使用id=\"SimCaptcha\"的元素，避免重复绑定点击）\r\n  * @param appId {String} 申请的场景Id\r\n  * @param callback {Function} 回调函数\r\n  * @param options {Object} 更多配置参数, 详见配置参数\r\n  */\n\tfunction SimCaptcha(element, appId, callback, options) {\n\t\t_element = element;\n\t\t_appId = appId;\n\t\t_callback = callback;\n\t\t_options = options;\n\n\t\tinit();\n\t}\n\tSimCaptcha.prototype = {\n\t\tconstructor: SimCaptcha,\n\n\t\t/**\r\n   * 设置验证码服务端URL\r\n   * @param {String} reqVCodeImgUrl 验证码服务端 图片Url\r\n   * @param {String} reqVCodeCheckUrl 验证码服务端 效验Url\r\n   */\n\t\tsetUrl: function setUrl(reqVCodeImgUrl, reqVCodeCheckUrl) {\n\t\t\t_reqVCodeImgUrl = reqVCodeImgUrl;\n\t\t\t_reqVCodeCheckUrl = reqVCodeCheckUrl;\n\t\t},\n\n\t\t/***\r\n   * 显示验证码\r\n   */\n\t\tshow: show,\n\n\t\t/***\r\n   * 隐藏当前验证码弹出层，下次show 将使用当前验证码图片base64\r\n   * 用于用户手动点击关闭按钮\r\n   */\n\t\thidden: hidden,\n\n\t\t/***\r\n   * 摧毁当前验证码（隐藏验证码弹出层，清除验证码图片base64），下次show 将请求新验证码图片base64\r\n   */\n\t\tdestroy: destroy,\n\n\t\t/***\r\n   * return: Object:{\"appId\":\"\",\"ticket\":\"\"}\r\n   */\n\t\tgetTicket: function getTicket() {\n\t\t\treturn {\n\t\t\t\tappId: _resAppId,\n\t\t\t\tticket: _resTicket\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 发送http GET\r\n   * @param {String} url 请求url\r\n   * @param {Function} callback 请求成功回调函数\r\n   */\n\n\t};function httpGet(url, callback) {\n\t\t// XMLHttpRequest对象用于在后台与服务器交换数据   \n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', url, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\t// readyState == 4说明请求已完成\n\t\t\tif (xhr.readyState == 4 && xhr.status == 200 || xhr.status == 304) {\n\t\t\t\t// 从服务器获得数据 \n\t\t\t\tcallback.call(this, JSON.parse(xhr.responseText));\n\t\t\t}\n\t\t};\n\t\txhr.send();\n\t}\n\n\t/**\r\n  * 发送http POST\r\n  * @param {String} url 请求url\r\n  * @param {Ojbect} data 将要发送的数据包装为对象\r\n  * @param {Function} callback 请求成功回调函数\r\n  */\n\tfunction httpPost(url, data, callback) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open(\"POST\", url, true);\n\t\t// 添加http头，发送信息至服务器时内容编码类型\n\t\t// xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 304)) {\n\t\t\t\tcallback.call(this, JSON.parse(xhr.responseText));\n\t\t\t}\n\t\t};\n\t\txhr.send(JSON.stringify(data));\n\t}\n\n\t/**\r\n  * 获取目标html元素相对于整个html文档的位置(y轴)(px)\r\n  * @param {HTMLElement} obj \r\n  */\n\tfunction getOffsetTop(obj) {\n\t\tvar tmp = obj.offsetTop;\n\t\tvar val = obj.offsetParent;\n\t\twhile (val != null) {\n\t\t\ttmp += val.offsetTop;\n\t\t\tval = val.offsetParent;\n\t\t}\n\t\treturn tmp;\n\t}\n\n\t/**\r\n  * 获取目标html元素相对于整个html文档的位置(x轴)(px)\r\n  * @param {HTMLElement} obj \r\n  */\n\tfunction getOffsetLeft(obj) {\n\t\tvar tmp = obj.offsetLeft;\n\t\tvar val = obj.offsetParent;\n\t\twhile (val != null) {\n\t\t\ttmp += val.offsetLeft;\n\t\t\tval = val.offsetParent;\n\t\t}\n\t\treturn tmp;\n\t}\n\n\t/**\r\n  * 移除目标元素\r\n  * @param {HTMLElement} _element 目标元素\r\n  */\n\tfunction removeElement(_element) {\n\t\tvar _parentElement = _element.parentNode;\n\t\tif (_parentElement) {\n\t\t\t_parentElement.removeChild(_element);\n\t\t}\n\t}\n\n\tfunction append(dom, htmlString) {}\n\n\tString.prototype.format = function () {\n\t\tvar args = arguments;\n\t\treturn this.replace(/\\{(\\d+)\\}/g, function (s, i) {\n\t\t\treturn args[i];\n\t\t});\n\t};\n\n\t//===========================================================================\n\n\t//======\n\t// NODE\n\t//======\n\tif (true) {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = SimCaptcha;\n\t\t}\n\t\texports.StateMachine = SimCaptcha;\n\t}\n\t//============\n\t// AMD/REQUIRE\n\t//============\n\telse if (typeof define === 'function' && define.amd) {\n\t\t\tdefine(function (require) {\n\t\t\t\treturn SimCaptcha;\n\t\t\t});\n\t\t}\n\t//========\n\t// BROWSER\n\t//========\n\tif (typeof window !== 'undefined') {\n\t\twindow.SimCaptcha = SimCaptcha;\n\t}\n\t//===========\n\t// WEB WORKER\n\t//===========\n\telse if (typeof self !== 'undefined') {\n\t\t\tself.SimCaptcha = SimCaptcha;\n\t\t}\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ })
/******/ ]);
});